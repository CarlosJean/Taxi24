// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Taxi24.Data;

namespace Taxi24.Data.Migrations
{
    [DbContext(typeof(Taxi24DbContext))]
    [Migration("20210503173752_InitialModels")]
    partial class InitialModels
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Taxi.Core.Models.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Available")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("Names")
                        .HasColumnType("text");

                    b.Property<string>("Surnames")
                        .HasColumnType("text");

                    b.Property<int?>("TripId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.ToTable("Driver");
                });

            modelBuilder.Entity("Taxi.Core.Models.Fare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Price")
                        .HasColumnType("text");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("TripId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.ToTable("Fare");
                });

            modelBuilder.Entity("Taxi.Core.Models.Passenger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Names")
                        .HasColumnType("text");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Surnames")
                        .HasColumnType("text");

                    b.Property<int?>("TripId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.ToTable("Passenger");
                });

            modelBuilder.Entity("Taxi.Core.Models.Trip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Cancelled")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<DateTime>("DemandDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("DestinationLatitude")
                        .HasColumnType("numeric");

                    b.Property<decimal>("DestinationLongitude")
                        .HasColumnType("numeric");

                    b.Property<int>("DriverId")
                        .HasColumnType("integer");

                    b.Property<int>("FareId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("FinishDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("OriginLatitude")
                        .HasColumnType("numeric");

                    b.Property<decimal>("OriginLongitude")
                        .HasColumnType("numeric");

                    b.Property<int>("PassengerId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Trip");
                });

            modelBuilder.Entity("Taxi.Core.Models.Driver", b =>
                {
                    b.HasOne("Taxi.Core.Models.Trip", null)
                        .WithMany("Driver")
                        .HasForeignKey("TripId");
                });

            modelBuilder.Entity("Taxi.Core.Models.Fare", b =>
                {
                    b.HasOne("Taxi.Core.Models.Trip", null)
                        .WithMany("Fare")
                        .HasForeignKey("TripId");
                });

            modelBuilder.Entity("Taxi.Core.Models.Passenger", b =>
                {
                    b.HasOne("Taxi.Core.Models.Trip", null)
                        .WithMany("Passenger")
                        .HasForeignKey("TripId");
                });

            modelBuilder.Entity("Taxi.Core.Models.Trip", b =>
                {
                    b.Navigation("Driver");

                    b.Navigation("Fare");

                    b.Navigation("Passenger");
                });
#pragma warning restore 612, 618
        }
    }
}
